# Example Argo Workflow to test exposing an RShiny visualization and clean up
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: n-a-a-vre-im-zhuyh-gmail-com-
  labels:
    vlab_slug: n-a-a-vre
spec:
    entrypoint: n-a-a-vre-im-zhuyh-gmail-com
    serviceAccountName: executor
    onExit: cleanup-template
    volumeClaimTemplates:
    - metadata:
        name: workdir
      spec:
        accessModes: [ "ReadWriteMany" ]
        persistentVolumeReclaimPolicy: Delete
        resources:
          requests:
            storage: 1Gi
    templates:
    - name: n-a-a-vre-im-zhuyh-gmail-com
      dag:
        tasks:
        - name: visualize-api-im-zhuyh-gmail-com-91f4b9d
          template: visualize-api-im-zhuyh-gmail-com-91f4b9d-tmp
        - name: api-creater
          template: api-creater-template
    - name: visualize-api-im-zhuyh-gmail-com-91f4b9d-tmp
      outputs:
        parameters:
          - name: x_aa72edb
            valueFrom:
              path: /tmp/x_aa72edb.json
      container:
        image: "jinseob2kim/docker-rshiny"
        imagePullPolicy: Always
        volumeMounts:
        - name: workdir
          mountPath: /tmp/data
        command: ["/usr/bin/supervisord"]
        readinessProbe:
          httpGet:
            path: /
            port: 3838
          initialDelaySeconds: 10
          periodSeconds: 5
      metadata:
        labels:
          app: naavre-visualizer-notebook

    # Example: set VIZ_TYPE environment variable
    - name: api-creater-template
      outputs:
        parameters:
        - name: vis-url
          valueFrom:
            path: /tmp/visualization_url.txt
      container:
        image: "xpsky/viz-api-creater"
        command: ["python"]
        args: ["-u", "/app/create_viz.py"]
        env:
        - name: WORKFLOW_NAME
          value: "{{workflow.name}}"
        - name: TARGET_PORT
          value: "3838"
        - name: NEEDS_BASE_PATH
          value: "false"
        - name: VIZ_TYPE
          value: "rshiny"  # R Shiny visualization

    - name: cleanup-template
      retryStrategy:
        limit: 3
        retryPolicy: "Always"
        backoff:
          duration: "5s"
          factor: 2
      container:
        image: "xpsky/viz-api-cleaner"
        command: ["python"]
        args: ["-u", "/app/cleaner.py"]
        env:
        - name: WORKFLOW_NAME
          value: "{{workflow.name}}"
        - name: API_URL
          value: "http://viz-test-visualization-api"